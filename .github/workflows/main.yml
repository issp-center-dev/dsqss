name: Test

on: [push]

jobs:
  build:
    name: "os: ${{ matrix.os }}, python: ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        python-version: ["3.6", "3.12"]
        exclude:
          - os: "ubuntu-22.04"
            python-version: "3.6"
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: apt
        run: |
          sudo apt update
          sudo apt install \
            gcc gfortran cmake wget liblapack-dev \
            openmpi-bin libopenmpi-dev

      - name: pip install
        run: |
          python -m pip install -U pip
          python -m pip install numpy scipy toml
          python -m pip install typing_extensions

      - name: make workspace
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: cmake
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/usr -DCMAKE_VERBOSE_MAKEFILE=1 $GITHUB_WORKSPACE

      - name: build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build ./

      - name: ctest
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -V

      - name: install
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: make install


  docs:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Prepare LaTeX env
      run: |
        sudo apt update
        sudo apt install \
          texlive-latex-recommended texlive-latex-extra \
          texlive-lang-japanese texlive-fonts-recommended texlive-fonts-extra latexmk
        kanji-config-updmap-sys ipaex

    - name: Install python packages
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinxcontrib-spelling

    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}
        cmake -E make_directory build
        cd build
        cmake -DDocument=ON ../
        make doc
